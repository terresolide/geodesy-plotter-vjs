{"version":3,"sources":["webpack:///./src/modules/leaflet.tiles.js","webpack:///./src/components/spot-gins.vue?fb0a","webpack:///./src/components/spot-gins.vue?71f6","webpack:///./src/components/spot-gins.vue?d2d5","webpack:///./src/components/spot-gins.vue","webpack:///src/components/spot-gins.vue","webpack:///./src/components/spot-gins.vue?3b92","webpack:///./src/components/spot-gins.vue?f9b2"],"names":["L","Control","Tiles","Layers","extend","tiles","osm","name","url","attribution","osmFr","opentopomap","arcgisTopo","arcgisSatellite","arcgisRelief","initialize","baseLayers","overlays","options","key","prototype","call","this","layer","tileLayer","addBaseLayer","module","exports","content","__webpack_require__","__esModule","default","i","locals","e","___CSS_LOADER_API_IMPORT___","push","leaflet_src","Icon","Default","_getIconUrl","iconRetinaUrl","iconUrl","shadowUrl","components_spot_ginsvue_type_script_lang_js_","components","JsonDiv","then","bind","SpotginsGraph","Promise","all","props","root","type","data","map","stations","scheme","json","datastreamId","baseUrl","layerControl","bounds","mode","selected","dataJsonUrl","img","imgMin","dataAsciiUrl","sitelog","loaded","popup","groupLayers","mounted","methods","scrollWheelZoom","setView","TilesControl","position","addTo","minWidth","minHeight","maxHeight","node","document","querySelector","setContent","load","_this","alert","$http","get","resp","display","body","reset","addStation","index","console","groupId","properties","className","icon","divIcon","self","geoJSON","pointToLayer","marker","latlng","title","addLayer","layerGroup","addOverlay","getBounds","fitBounds","padding","value","Locations","station","location","description","download","dataUrl","responseType","bodyBlob","window","URL","createObjectURL","a","createElement","extractUrl","base","pathname","split","origin","join","replace","id","loadFeatures","_this2","feature","getData","target","datastream","file","setLatLng","getLatLng","openOn","getDataOld","replaceAll","dataJSON","dataASCII","createPopup","component","Object","componentNormalizer","_vm","_c","_self","staticStyle","_v","attrs","background","max-width","min-height","max-height","_s","staticClass","on","click","$event","class","directives","rawName","expression","overflow-y","deployed","text-align","overflow","href","src","width","_e","margin","__webpack_exports__"],"mappings":"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","file":"3.spot-gins-vjs.js","sourcesContent":["/**\n * L control tiles with given default tiles\n */\n/* eslint no-undef: 0 */\nL.Control.Tiles = L.Control.Layers.extend({\n  tiles: {\n    osm: {\n      name: 'OpenStreetMap',\n      url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    },\n    osmFr: {\n      name: 'OpenStreetMap France',\n      url: '//{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png',\n      attribution: 'donn&eacute;es &copy; <a href=\"//osm.org/copyright\">OpenStreetMap</a>/ODbL - rendu <a href=\"//openstreetmap.fr\">OSM France</a>'\n    },\n    opentopomap: {\n      name: 'OpenStreetMap Topo',\n      url: '//{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\n      attribution: 'Kartendaten: © <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap</a>-Mitwirkende, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Kartendarstellung: © <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n    },\n    arcgisTopo: {\n      name: 'ArcGIS World Topo Map',\n      url: 'https://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n      attribution: 'Tiles © <a href=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer\">ArcGIS</a>'\n    },\n    arcgisSatellite: {\n      name: 'ArcGIS Satellite Tiles',\n      url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n      attribution: 'Tiles © <a href=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer\">Arcgis</a>'\n    },\n    arcgisRelief: {\n      name: 'ArcGIS Relief Tiles',\n      url: 'https://services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer/tile/{z}/{y}/{x}',\n      attribution: 'Tiles © <a href=\"https://services.arcgisonline.com/arcgis/rest/services/World_Shaded_Relief/MapServer\">Arcgis</a>'\n    }\n  },\n  initialize: function (baseLayers, overlays, options) {\n    L.Control.Layers.prototype.initialize.call(this, baseLayers, overlays, options)\n    // Default tiles already in control\n    for (var key in this.tiles) {\n      var layer = L.tileLayer(this.tiles[key].url, {attribution: this.tiles[key].attribution})\n      this.tiles[key].layer = layer\n      this.addBaseLayer(layer, this.tiles[key].name)\n    }\n  }\n})\nmodule.exports = L.Control.Tiles\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spot-gins.vue?vue&type=style&index=1&id=1936d5bc&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"620bf5ea\", content, true, {});","export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spot-gins.vue?vue&type=style&index=1&id=1936d5bc&prod&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n#map {\\n  min-height:500px;\\n  height:100vh;\\n  width:100%;\\n}\\n#map .leaflet-popup-scrolled {\\n  border: none;\\n  padding-top: 0;\\n}\\n#map h4 {\\n  margin:0;\\n}\\nh1 {\\n   position: fixed;\\n   bottom:0;\\n   width:100%;\\n   text-align:center;\\n   z-index:1000;\\n   pointer-events:none;\\n}\\ndiv.marker-red{\\n  width: 30px;\\n  height: 30px;\\n  background-color: darkred;\\n  border: 1px solid black;\\n  border-radius:3px;\\n}\\ndiv.marker-blue {\\n  width: 30px;\\n  height: 30px;\\n  background-color: blue;\\n  border: 1px solid black;\\n  border-radius:3px;\\n}\\ndiv.leaflet-control-layers-overlays div.marker-red,\\ndiv.leaflet-control-layers-overlays div.marker-blue {\\n  display:inline-block;\\n  width: 10px;\\n  height: 10px;\\n  vertical-align: middle;\\n}\\nul.menu-content {\\n  font-size: 0.8rem;\\n  border-bottom: 1px solid #adadad;\\n  margin:5px 0;\\n  padding: 5px 0 0 0;\\n}\\nul.menu-content li {\\n  display: inline-block;\\n   min-width: 50px;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  border: 1px solid #adadad;\\n  border-bottom: none;\\n  text-align: center;\\n  color: black;\\n  height: 30px;\\n  padding:0;\\n  vertical-align: middle;\\n  margin: 0;\\n  background: #efefef;\\n  text-transform: capitalize;\\n}\\nul.menu-content li span {\\n    text-transform: capitalize;\\n    vertical-align: middle;\\n    height: 30px;\\n    min-width:50px;\\n    color:black;\\n    padding: 5px 10px 0 10px;\\n    text-decoration: none;\\n    display:inline-block;\\n    cursor:pointer;\\n}\\nul.menu-content li span:hover {\\n  color:#b8412c;\\n}\\nul.menu-content li span.selected {\\n  background:white;\\n  color:#b8412c;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('h1',[_vm._v(\"SPOT GINS TEST\")]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"map\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"background\":\"white\",\"max-width\":\"450px\",\"min-height\":\"500px\",\"max-height\":\"500px\"},attrs:{\"id\":\"json\"}},[_c('h4',[_vm._v(_vm._s(_vm.selected))]),_vm._v(\" \"),_c('ul',{staticClass:\"menu-content\"},[_c('li',{on:{\"click\":function($event){_vm.mode = 'station'}}},[_c('span',{class:{'selected': _vm.mode === 'station'}},[_vm._v(\"Station\")])]),_vm._v(\" \"),_c('li',{on:{\"click\":function($event){_vm.mode='graph'}}},[_c('span',{class:{'selected': _vm.mode === 'graph'}},[_vm._v(\"Graphique\")])]),_vm._v(\" \"),_c('li',{on:{\"click\":function($event){_vm.mode='data'}}},[_c('span',{class:{'selected': _vm.mode === 'data'}},[_vm._v(\"Interactif\")])]),_vm._v(\" \"),_c('li',{on:{\"click\":function($event){_vm.mode='download'}}},[_c('span',{class:{'selected': _vm.mode === 'download'}},[_vm._v(\"Téléchargement\")])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'station'),expression:\"mode === 'station'\"}],staticStyle:{\"max-height\":\"420px\",\"overflow-y\":\"scroll\"}},[_c('json-div',{attrs:{\"json\":_vm.json,\"selected\":_vm.mode === 'station',\"deployed\":true}})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'graph'),expression:\"mode === 'graph'\"}],staticStyle:{\"text-align\":\"center\",\"max-height\":\"420px\",\"overflow\":\"scroll\"}},[(_vm.imgMin)?_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loaded),expression:\"loaded\"}]},[_c('a',{attrs:{\"href\":_vm.img,\"target\":\"_blank\"}},[_c('img',{attrs:{\"src\":_vm.imgMin,\"width\":\"350\"},on:{\"load\":function($event){_vm.loaded = true}}})])]):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'data'),expression:\"mode === 'data'\"}],staticStyle:{\"text-align\":\"center\",\"max-height\":\"420px\",\"overflow\":\"scroll\"}},[_c('spotgins-graph',{attrs:{\"url\":_vm.root,\"id\":_vm.datastreamId,\"selected\":_vm.mode === 'data'}})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'download'),expression:\"mode === 'download'\"}],staticStyle:{\"margin\":\"20px\"}},[_c('input',{attrs:{\"type\":\"button\",\"value\":\"Télécharger ASCII\"},on:{\"click\":function($event){return _vm.download('ascii')}}})])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"position:relative;\">\n  <h1>SPOT GINS TEST</h1>\n    <div id=\"map\" ></div>\n    <div  id=\"json\" style=\"background:white;max-width:450px;min-height:500px;max-height:500px;\">\n      <h4>{{selected}}</h4>\n      <ul class=\"menu-content\">\n        <li @click=\"mode = 'station'\" >\n        <span :class=\"{'selected': mode === 'station'}\" >Station</span>\n        </li>\n        <li @click=\"mode='graph'\" >\n            <span :class=\"{'selected': mode === 'graph'}\" >Graphique</span>\n        </li>\n        <li @click=\"mode='data'\" >\n            <span :class=\"{'selected': mode === 'data'}\" >Interactif</span>\n        </li>\n         <li @click=\"mode='download'\" >\n            <span :class=\"{'selected': mode === 'download'}\" >Téléchargement</span>\n        </li>\n      </ul>\n      <div v-show=\"mode === 'station'\" style=\"max-height:420px;overflow-y:scroll;\">\n      <json-div :json=\"json\" :selected=\"mode === 'station'\" :deployed=\"true\"></json-div>\n      </div>\n      <div v-show=\"mode === 'graph'\" style=\"text-align:center;max-height:420px;overflow:scroll;\">\n       <div v-if=\"imgMin\" v-show=\"loaded\">\n        <a :href=\"img\" target=\"_blank\">\n          <img  :src=\"imgMin\" width=\"350\" @load=\"loaded = true\">\n        </a>\n       </div>\n      </div>\n      <div v-show=\"mode === 'data'\" style=\"text-align:center;max-height:420px;overflow:scroll;\">\n        <spotgins-graph :url=\"root\" :id=\"datastreamId\" :selected=\"mode === 'data'\"></spotgins-graph>\n      </div>\n      <div v-show=\"mode === 'download'\" style=\"margin:20px;\">     \n       <!--    <input type=\"button\" value=\"Télécharger JSON\" @click=\"download('json')\"/><br /><br />-->\n         <input type=\"button\" value=\"Télécharger ASCII\" @click=\"download('ascii')\" />\n      </div>\n    </div>\n   </div>\n</template>\n\n<script>\nvar L = require('leaflet')\nimport { Icon } from 'leaflet';\nL.TilesControl = require('../modules/leaflet.tiles.js')\ndelete Icon.Default.prototype._getIconUrl;\nIcon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\nconst JsonDiv = () => import('./json-div.vue')\nconst SpotginsGraph = () => import('./spotgins-graph.vue')\nexport default {\n  name: 'SpotGins',\n  components: {\n    JsonDiv,\n    SpotginsGraph\n  },\n  props: {\n    root: {\n      type: String,\n      default: 'https://catalog.formater/FROST-Server/v1.1/'\n    }\n  },  \n  data () {\n    return {\n      map: null,\n      stations: [],\n      scheme: {},\n      json: null,\n      datastreamId: null,\n      baseUrl: null,\n      layerControl: null,\n      bounds: null,\n      mode: 'graph',\n      selected: null,\n      dataJsonUrl: null,\n      img: null,\n      imgMin: null,\n      dataAsciiUrl: null,\n      sitelog: null,\n      loaded: false,\n      popup: null,\n      groupLayers: []\n    }\n  },\n  mounted () {\n    this.initialize()\n  },\n  methods: {\n    initialize () {\n      this.map = L.map( \"map\", {scrollWheelZoom: true}).setView([20, -0.09], 3);\n      this.layerControl = new L.TilesControl(null, null, {position: 'topright'})\n      this.layerControl.tiles.arcgisTopo.layer.addTo(this.map)\n      this.layerControl.addTo(this.map)\n      this.popup = L.popup({minWidth: 450, minHeight:500, maxHeight:500})\n      var node = document.querySelector('#json')\n      // container.appendChild(node)\n      this.popup.setContent(node)\n      var self = this\n//       this.map.on('popupclose', function (e) {\n//         var json = e.target._container.querySelector('#json')\n//         if (json) {\n//           self.$el.appendChild(json)\n//         }\n//         self.reset()\n//       })\n      this.load()\n    },\n    load () {\n      if (!this.root) {\n        alert('Pas de fichier \"root\"!')\n      }\n      this.$http.get(this.root + 'Things?$expand=Locations,Datastreams')\n      .then(\n          resp => {this.display(resp.body)},\n          resp => {alert('Erreur de chargement: ' + resp.status)}\n       )\n    },\n    reset () {\n      this.loaded = false\n      this.img = null\n      this.imgMin = null\n      this.json = null\n      this.dataJsonUrl = null\n      this.dataAsciiUrl = null\n      this.sitelog = null\n    },\n    addStation (index) {\n      console.log(index)\n      if (!this.stations[index]) {\n        if (this.bounds) {\n          this.map.fitBounds(this.bounds, {padding: [20,20]})\n        }\n        return\n      }\n      var groupId = this.stations[index].properties.groupId \n      var className = groupId === 1 ? 'marker-blue' : 'marker-red'\n      var icon = L.divIcon({className: className})\n      var self = this\n      var layer = L.geoJSON(this.stations[index],{\n        pointToLayer: function(feature, latlng) {\n           var marker = L.marker(latlng, {icon: icon, title: feature.id})\n           marker.on('click', self.getData )\n           return marker\n        }\n      })\n     // layer.addTo(this.map)\n       if (!this.groupLayers[groupId]) {\n        this.groupLayers[groupId] = L.layerGroup([layer])\n        this.layerControl.addOverlay(this.groupLayers[groupId], 'Groupe ' + groupId +' <div class=\"' + className + '\"></div>' )\n        this.groupLayers[groupId].addTo(this.map)\n      } else {\n        this.groupLayers[groupId].addLayer(layer)\n      }\n      var bounds = layer.getBounds()\n      if (!this.bounds) {\n        this.bounds = bounds\n      } else {\n        this.bounds.extend(bounds)\n      }\n      this.stations[index].layer = layer\n      this.addStation(index + 1)\n    },\n    display (data) {\n      var self = this\n      data.value.forEach(function (value) {\n        if (value.Locations[0]) {\n\t        var station = value.Locations[0].location\n\t        station.properties = Object.assign({name: value.name, description: value.description}, value.properties)\n\t        station.datastream = value.Datastreams[0]\n// \t        station.properties = value.properties\n// \t        station.properties.name = value.name\n// \t        station.properties.description = value.description\n\t       \n\t        station['@iot.id'] = value['@iot.id']\n\t        self.stations.push(station)\n        }\n      })\n      this.addStation(0)\n       \n    },\n    download (type) {\n      console.log(type)\n      var dataUrl = null\n      if (type === 'json') {\n        // var MIME_TYPE = \"application/json\";\n        dataUrl = this.dataJsonUrl\n        console.log(dataUrl)\n      }\n      if (type === 'ascii') {\n        dataUrl = this.dataAsciiUrl\n      }\n      console.log(dataUrl)\n      this.$http.get(dataUrl, {responseType: 'blob'}).then(\n          resp => {\n            console.log(resp.bodyBlob)\n            if (resp.bodyBlob) {\n             // var blob = new Blob(resp.bodyBlob);\n              var url = window.URL.createObjectURL(resp.bodyBlob);\n              const a = document.createElement('a')\n              a.href = url\n              a.download = dataUrl.split('/').pop()\n              document.body.appendChild(a)\n              a.click()\n              document.body.removeChild(a)\n            }\n          }\n      )\n//       var blob = new Blob([data], {type: MIME_TYPE});\n//       window.location.href = window.URL.createObjectURL(blob);\n    },\n    extractUrl (json) {\n      var url = new URL(this.root)\n      var base = url.pathname.split('/')\n      base.pop()\n      this.baseUrl = url.origin + base.join('/')\n      var scheme = json.scheme\n      for(var key in scheme) {\n        console.log(key)\n        this.scheme[key] = scheme[key].replace('[base_url]', this.baseUrl)\n      }\n      var self = this\n      json.stations.forEach(function (url, index) {\n         self.stations.push({\n           id: index,\n           url: url.replace('[base_url]', self.baseUrl)\n         })\n      })\n      this.loadFeatures(0)\n    },\n    loadFeatures (index) {\n      if (!this.stations[index]) {\n        if (this.bounds) {\n          this.map.fitBounds(this.bounds)\n        }\n        return\n      }\n      var self = this\n      this.$http.get(this.stations[index].url)\n      .then(resp => {\n        console.log(resp.body)\n        var className = resp.body.className\n        var id = resp.body.id\n        var icon = L.divIcon({className: className})\n        this.stations[index].feature = L.geoJSON(resp.body,{\n          pointToLayer: function(feature, latlng) {\n             var marker = L.marker(latlng, {icon: icon, title: feature.id})\n             marker.on('click', self.getData )\n             return marker\n          }\n        }).addTo(this.map)\n        var bounds = this.stations[index].feature.getBounds()\n        if (!this.bounds) {\n          this.bounds = bounds\n        } else {\n          this.bounds.extend(bounds)\n        }\n        this.layerControl.addOverlay(this.stations[index].feature, id +' <div class=\"' + className + '\"></div>' )\n        // this.map.fitBounds(this.stations.getBounds())\n        this.loadFeatures(index + 1)\n      }, resp => {\n        alert('Erreur chargement station ' + (index + 1 ) + ': ' + resp.status)\n        this.loadFeatures(index + 1)\n      })\n    },\n    getData (e) {\n      this.mode = 'graph'\n       if (this.loaded === e.target.id) {\n         return\n       }\n      this.img = e.target.feature.datastream.properties.img\n      this.imgMin = this.img\n      this.datastreamId = e.target.feature.datastream['@iot.id']\n      this.dataAsciiUrl = e.target.feature.datastream.properties.file\n     this.json = e.target.feature.properties\n      this.popup.setLatLng(e.target.getLatLng())\n      this.popup.openOn(this.map)\n      \n    },\n    getDataOld (e) {\n//       this.imgUrl = null\n//       this.dataJsonUrl = null\n//       this.json = null\n//       this.dataAsciiUrl = null\n      this.mode = 'graph'\n      if (this.loaded === e.target.id) {\n        return\n      }\n    \n     // e.target.bindPopup('Recherche en cours ...', {minWidth: 500, minHeight:600})\n     // e.target.openPopup()\n      var id = e.target.feature.id\n      this.loaded = id\n      this.selected = id\n      this.img = this.scheme.img.replaceAll('[id]', id)\n      this.imgMin = this.scheme.imgMin.replaceAll('[id]', id)\n      // console.log(url)\n      this.popup.setLatLng(e.target.getLatLng())\n     this.popup.openOn(this.map)\n//        this.img = this.scheme.img.replaceAll('[id]', id)\n//       this.imgMin = this.scheme.imgMin.replaceAll('[id]', id)\n      this.dataJsonUrl = this.scheme.dataJSON.replaceAll('[id]', id)\n      this.dataAsciiUrl = this.scheme.dataASCII.replaceAll('[id]', id)\n       this.sitelog = this.scheme.sitelog.replaceAll('[id]', id)\n     \n      var self = this\n      // self.createPopup(e.target)\n      \n      \n    },\n    createPopup(marker) {\n     // marker.closePopup();\n     // marker.unbindPopup();\n      this.mode = 'graph'\n     // var container = document.createElement('div')\n//       var node = document.querySelector('#json')\n//       container.appendChild(node)\n     // marker.bindPopup(container, {minWidth: 450, minHeight:500}).openPopup()\n      this.img = this.scheme.img.replaceAll('[id]', marker.feature.id)\n      this.imgMin = this.scheme.imgMin.replaceAll('[id]', marker.feature.id)\n      this.dataJsonUrl = this.scheme.dataJSON.replaceAll('[id]', marker.feature.id)\n      this.dataAsciiUrl = this.scheme.dataASCII.replaceAll('[id]', marker.feature.id)\n    }\n  }\n}\n</script>\n<style src='leaflet/dist/leaflet.css'>\n    /* global styles */\n</style> \n<style>\n\n#map {\n  min-height:500px;\n  height:100vh;\n  width:100%;\n}\n#map .leaflet-popup-scrolled {\n  border: none;\n  padding-top: 0;\n}\n#map h4 {\n  margin:0;\n}\nh1 {\n   position: fixed;\n   bottom:0;\n   width:100%;\n   text-align:center;\n   z-index:1000;\n   pointer-events:none;\n}\ndiv.marker-red{\n  width: 30px;\n  height: 30px;\n  background-color: darkred;\n  border: 1px solid black;\n  border-radius:3px;\n}\n\ndiv.marker-blue {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  border: 1px solid black;\n  border-radius:3px;\n}\ndiv.leaflet-control-layers-overlays div.marker-red,\ndiv.leaflet-control-layers-overlays div.marker-blue {\n  display:inline-block;\n  width: 10px;\n  height: 10px;\n  vertical-align: middle;\n} \n ul.menu-content {\n  font-size: 0.8rem;\n  border-bottom: 1px solid #adadad;\n  margin:5px 0;\n  padding: 5px 0 0 0;\n }\n ul.menu-content li {\n  display: inline-block;\n   min-width: 50px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  border: 1px solid #adadad;\n  border-bottom: none;\n  text-align: center;\n  color: black;\n  height: 30px;\n  padding:0;\n  vertical-align: middle;\n  margin: 0;\n  background: #efefef;\n  text-transform: capitalize;\n}\n\nul.menu-content li span {\n    text-transform: capitalize;\n    vertical-align: middle;\n    height: 30px;\n    min-width:50px;\n    color:black;\n    padding: 5px 10px 0 10px;\n    text-decoration: none;\n    display:inline-block;\n    cursor:pointer;\n}\nul.menu-content li span:hover {\n  color:#b8412c;\n}\nul.menu-content li span.selected {\n  background:white;\n  color:#b8412c;\n}\n</style>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spot-gins.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spot-gins.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./spot-gins.vue?vue&type=template&id=1936d5bc&\"\nimport script from \"./spot-gins.vue?vue&type=script&lang=js&\"\nexport * from \"./spot-gins.vue?vue&type=script&lang=js&\"\nimport style0 from \"leaflet/dist/leaflet.css?vue&type=style&index=0&prod&lang=css&\"\nimport style1 from \"./spot-gins.vue?vue&type=style&index=1&id=1936d5bc&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}