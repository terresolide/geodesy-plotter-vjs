{"version":3,"sources":["webpack:///./src/components/spotgins-graph.vue?7cac","webpack:///./src/components/spotgins-graph.vue?db1f","webpack:///./src/components/spotgins-graph.vue?f9db","webpack:///./src/components/spotgins-graph.vue","webpack:///src/components/spotgins-graph.vue","webpack:///./src/components/spotgins-graph.vue?feb1","webpack:///./src/components/spotgins-graph.vue?5c66"],"names":["content","__webpack_require__","__esModule","default","module","i","locals","exports","e","___CSS_LOADER_API_IMPORT___","push","v","_typeof","highcharts","HighchartsExporting","HighchartsMore","Stock","Data","Accessibility","Indicators","Regression","components_spotgins_graphvue_type_script_lang_js_","props","id","type","url","average","selected","watch","this","reset","console","load","newvalue","results","N","length","data","height","next","currentIndex","E","U","dates","types","pointDate","date","graphs","colors","plotlines","min","max","title","methods","self","forEach","_this2","navigationLink","$http","get","headers","then","resp","body","value","dataArray","extractData","searchNext","_this3","addData","time","moment_default","result","valueOf","quality","Math","setTimeout","n","addPointsToGraphs","concat","buildGraph","index","_this","highlight","event","point","series","searchPoint","key","chart","tp","color","width","addSpinner","spinner","document","createElement","$el","querySelector","appendChild","draw","floor","ceil","zoomType","credits","enabled","legend","exporting","tooltip","formatter","_this4","values","pt","points","find","el","x","round","high","open","a","unix","format","join","shared","plotOptions","xAxis","lineColor","events","afterSetExtremes","xMin","xMax","gridLineWidth","plotLines","yAxis","text","name","zIndex","lineWidth","component","Object","componentNormalizer","_vm","_c","_self","style","attrs","on","mousemove","$event","_m","_v","staticClass","__webpack_exports__"],"mappings":"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","file":"3.spot-gins-vjs.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spotgins-graph.vue?vue&type=style&index=0&id=09d74342&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d5415d5e\", content, true, {});","export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spotgins-graph.vue?vue&type=style&index=0&id=09d74342&prod&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n.my-spinner {\\n  width:100%;\\n  padding-top:30px;\\n  text-align:center;\\n}\\n.my-spinner .fa {\\n  vertical-align: middle;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{style:({height:_vm.height + 'px'}),attrs:{\"id\":\"graph_E\"},on:{\"mousemove\":function($event){return _vm.highlight($event, 'E')}}},[_vm._m(0)]),_vm._v(\" \"),_c('div',{style:({height:_vm.height + 'px'}),attrs:{\"id\":\"graph_N\"},on:{\"mousemove\":function($event){return _vm.highlight($event, 'N')}}},[_vm._m(1)]),_vm._v(\" \"),_c('div',{style:({height:_vm.height + 'px'}),attrs:{\"id\":\"graph_U\"},on:{\"mousemove\":function($event){return _vm.highlight($event, 'U')}}},[_vm._m(2)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-spinner\"},[_c('span',{staticClass:\"fa fa-spinner fa-spin fa-2x fa-fw\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-spinner\"},[_c('span',{staticClass:\"fa fa-spinner fa-spin fa-2x fa-fw\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-spinner\"},[_c('span',{staticClass:\"fa fa-spinner fa-spin fa-2x fa-fw\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n<div>\n <div id=\"graph_E\" :style=\"{height:height + 'px'}\" @mousemove=\"highlight($event, 'E')\">\n    <div class=\"my-spinner\">\n       <span class=\"fa fa-spinner fa-spin fa-2x fa-fw\"></span>\n    </div>\n </div>\n <div id=\"graph_N\" :style=\"{height:height + 'px'}\" @mousemove=\"highlight($event, 'N')\">\n    <div class=\"my-spinner\">\n       <span class=\"fa fa-spinner fa-spin fa-2x fa-fw\"></span>\n    </div>\n</div>\n\n <div id=\"graph_U\" :style=\"{height:height + 'px'}\" @mousemove=\"highlight($event, 'U')\">\n     <div class=\"my-spinner\">\n       <span class=\"fa fa-spinner fa-spin fa-2x fa-fw\"></span>\n    </div>\n </div>\n</div>\n</template>\n<script>\n/* eslint-disable */\nimport * as Highcharts from 'highcharts'\nimport moment from 'moment'\nimport HighchartsExporting from 'highcharts/modules/exporting'\n//import HighchartsReact from 'highcharts-react-official'\nimport HighchartsMore from 'highcharts/highcharts-more'\nimport Stock from 'highcharts/modules/stock'\nimport Data from 'highcharts/modules/data'\nimport Accessibility from 'highcharts/modules/accessibility'\nimport Indicators from 'highcharts/indicators/indicators'\nimport Regression from 'highcharts/indicators/regressions'\nif (typeof Highcharts === 'object') {\n  HighchartsExporting(Highcharts)\n  HighchartsMore(Highcharts) // init module\n  Stock(Highcharts)\n  Data(Highcharts)\n Accessibility(Highcharts)\n // Highstock(Highcharts)\n // for regression\n Indicators(Highcharts)\n Regression(Highcharts)\n}\n\nexport default {\n  props: {\n    id: {\n      type: Number,\n      default: null\n    },\n    url: {\n      type: String,\n      default: null\n    },\n    average: {\n      type: Array,\n      default: () => {return [0,0,0]}\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    url () {\n      this.reset()\n      console.log(this.selected)\n      if (this.selected) {\n        this.load()\n      }\n    },\n    id () {\n      this.reset()\n      console.log(this.selected)\n      if (this.selected) {\n        this.load()\n      }\n    },\n    selected (newvalue) {\n      if (this.results.N.length === 0 && newvalue) {\n        this.load()\n      }\n    }\n  },\n  data () {\n    return {\n      height: 150,\n      next: null,\n      currentIndex: 0,\n      results: { E: [],N: [], U: []},\n      dates: [],\n      types:['E', 'N',  'U'],\n      pointDate: {date: null, N: null, E: null, U: null},\n      graphs: {N: null, E: null, U: null},\n      colors:{\n        N: 'blue',\n        E: '#f00',\n        U: '#006400'\n       },\n       plotlines: [],\n       min: {E: null, N: null,  U: null},\n       max: {E: null, N: null,  U: null},\n       title: {E: 'East (mm)', N: 'North (mm)',  U: 'Up (mm)'}\n    }\n  },\n  methods: {\n    reset () {\n      // reset graph\n      var self = this\n      this.dates = []\n      this.types.forEach(function (type) {\n        if (self.graphs[type]) {\n          self.graphs[type].destroy()\n          self.graphs[type] = null\n          self.addSpinner(type)\n        }\n        self.results[type] = []\n        self.min[type] = null\n        self.max[type] = null\n      })\n      \n    },\n    load () {\n      if (!this.url) {\n        return\n      }\n      this.navigationLink = this.url + 'Datastreams(' + this.id + ')'\n      this.$http.get(this.navigationLink + '/Observations?$top=1000&$select=phenomenonTime,result,resultQuality&$format=dataArray', {headers: 'accept: application/json'})\n      .then(resp => {\n        if (resp.body.value && resp.body.value[0]) {\n          // check if it's always the same Datastream\n          if (resp.body.value[0]['Datastream@iot.navigationLink'] === this.navigationLink) {\n\t          this.next = null\n\t          if (resp.body.value[0].dataArray) {\n\t\t          this.extractData(resp.body.value[0].dataArray)\n\t\t          if (resp.body['@iot.nextLink']) {\n\t\t            this.next = resp.body['@iot.nextLink']\n\t\t          }\n\t          }\n          }\n        }\n//         this.initDates()\n//         this.extractData()\n       })\n    },\n    searchNext () {\n      if (!this.next) {\n        return\n      }\n      this.$http.get(this.next, {headers: 'accept: application/json'})\n      .then(resp => {\n        if (resp.body.value && resp.body.value[0] && \n            resp.body.value[0]['Datastream@iot.navigationLink'] === this.navigationLink) {\n          this.next = null\n          if (resp.body.value[0].dataArray) {\n            if (resp.body['@iot.nextLink']) {\n              this.next = resp.body['@iot.nextLink']\n            }\n\t          this.addData(resp.body.value[0].dataArray)\n\t          \n          }\n        }\n//         this.initDates()\n//         this.extractData()\n        \n       })\n    },\n//     initDates () {\n// //       var dates = this.values.map(result => result[0])\n// //       console.log(dates)\n//       this.dates = this.values.map(result => result[0])\n//     },\n    extractData (data) {\n     \n      var self = this\n     // this.dates = this.values.map(result => result[0])\n      this.min = {\n        E: data[0][1][0] - this.average[0],\n        N: data[0][1][1] - this.average[1],\n        U: data[0][1][2] - this.average[2]\n      }\n      this.max = {\n        E: data[0][1][0] - this.average[0],\n        N: data[0][1][1] - this.average[1],\n        U: data[0][1][2] - this.average[2]\n      }\n      data.forEach (function (result, n) {\n        var time = moment(result[0], 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n        var value = {}\n        var quality = {}\n        value.E = Math.round((result[1][0] - self.average[0])* 100) / 100\n        quality.E = result[2][0]\n        value.N = Math.round((result[1][1] - self.average[1]) * 100) / 100\n        quality.N = result[2][1]\n        value.U = Math.round((result[1][2] - self.average[2]) * 100) /100\n        quality.U = result[2][2]\n        self.dates.push(time)\n\t       // data.push([time, result])\n\t     // if (n%2 === 0) {\n\t        self.types.forEach(function (type) {\n\t          self.results[type].push(\n\t             [time, \n\t             value[type],\n\t             Math.round((value[type] + quality[type]) * 100) / 100,\n\t             Math.round((value[type] - quality[type]) * 100) / 100,\n\t             value[type]\n\t          ]) \n\t          if (quality.N < 1) {\n              if (self.min[type] > value[type]) {\n                self.min[type] = value[type]\n              } else if (self.max[type] < value[type]) {\n                self.max[type] = value[type]\n              }\n            }\n\t        })\n\t     // }\n       \n      \n// \t      if (result[0].substring(4) === '01-01') {\n// \t        self.plotlines.push({\n// \t          color: '#ccd6eb',\n// \t          value: time,\n// \t          width: 1,\n// \t          id: n\n// \t        })\n// \t      }\n      })\n      this.currentIndex = data.length - 1\n      setTimeout(function () {\n        self.buildGraph(0)\n      }, 0)\n    },\n    addData (data) {\n      var self = this\n      var dates = []\n      var results = {E: [], N: [], U: []}\n      data.forEach (function (result, n) {\n        var time = moment(result[0], 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n        var value = {}\n        var quality = {}\n        value.E = result[1][0]\n        quality.E = result[2][0]\n        value.N = result[1][1]\n        quality.N = result[2][1]\n        value.U = result[1][2]\n        quality.U = result[2][2]\n        \n        dates.push(time)\n         // data.push([time, result])\n        if ((self.currentIndex + n)%7 === 0) {\n          self.types.forEach(function (type) {\n            results[type].push(\n               [time, \n               value[type],\n               Math.round((value[type] + quality[type]) * 100) / 100,\n               Math.round((value[type] - quality[type]) * 100) / 100,\n               value[type]\n            ]) \n            if (quality.N < 10) {\n              if (self.min[type] > value[type]) {\n                self.min[type] = value[type]\n              } else if (self.max[type] < value[type]) {\n                self.max[type] = value[type]\n              }\n            }\n          })\n        }\n      })\n      this.currentIndex = this.currentIndex + dates.length\n      this.addPointsToGraphs(dates, results)\n      this.searchNext()\n    },\n    addPointsToGraphs(dates, results) {\n      var self = this\n      this.dates = this.dates.concat(dates)\n      this.types.forEach(function(type) {\n         self.results[type] = self.results[type].concat(results[type])\n      })\n      \n      this.types.forEach(function (type) {\n        if (self.graphs[type]) {\n\t        results[type].forEach(function (result) {\n\t          self.graphs[type].series[0].addPoint(result, false)\n\t        })\n\t        self.graphs[type].redraw()\n\t        self.graphs[type].xAxis[0].setExtremes(self.dates[0], self.dates[self.dates.length - 1], true, false)\n\t        self.graphs[type].yAxis[0].setExtremes(self.min[type], self.max[type], true, false)\n        }\n      })\n      \n    },\n    buildGraph (index) {\n      var _this = this\n      if (!this.types[index]) {\n        if (this.next) {\n          this.searchNext()\n        }\n        return\n      }\n      var type = this.types[index]\n      _this.draw(type)\n      setTimeout(function () {\n        _this.buildGraph(index + 1)\n      }, 0)\n    },\n    highlight (e, type) {\n//    if (!this.graphs[type]) {\n//      this.tooltip = false\n//      return\n//    }\n     // console.log(e)\n      var chart,\n        point,\n        i,\n        event;\n      var _this = this\n      if (!this.graphs[type]) {\n        return false\n      }\n      event = this.graphs[type].pointer.normalize(e);\n      var point = this.graphs[type].series[0].searchPoint(event, true);\n      if (!point) {\n        return\n      }\n//       this.pointDate.date = moment.unix(point.x / 1000).format('ll')\n//       this.pointDate[type] = point.open\n      for (var key in this.types) {\n        var tp = this.types[key]\n        var chart = this.graphs[tp];\n        if (chart && typeof chart !== 'undefined') {\n  //        var pt = chart.series[0].points.find(el => el.x === point.x )\n//           if (pt !== undefined) {\n//            this.pointDate[key] = pt.open\n//           }\n          chart.xAxis[0].removePlotLine('highlight')\n          chart.xAxis[0].addPlotLine({\n           color: '#999999',\n           value:  point.x,\n           width: 1,\n           id: 'highlight'\n         })\n        }\n      }    \n    },\n    addSpinner (type) {\n      var spinner = document.createElement('div')\n      spinner.setAttribute('class', 'my-spinner')\n      var content = document.createElement('span')\n      content.setAttribute('class', 'fa fa-spinner fa-spin fa-2x fa-fw')\n      spinner.appendChild(content)\n      this.$el.querySelector('#graph_' + type).appendChild(spinner)\n      \n   },\n    draw (type) {\n // remove graph if exists\n   \n//     var ivalue = 0\n//     var idelta = 3\n//     switch (type) {\n//       case 'N':\n//         ivalue = 1\n//         idelta = 4\n//         break\n//       case 'U':\n//         ivalue = 2\n//         idelta = 5\n//         break\n//     }\n//     var data = []\n    var min = Math.floor(this.min[type])\n    var max = Math.ceil(this.max[type])\n//     // var delta = []\n//     var plotlines = []\n//     var regData = []\n//     var dates = []\n//     var data = []\n//     // fill data\n    var _this = this\n   \n//     this.dates.forEach (function (date, n) {\n//          var time = moment(date, 'YYYY-MM-DD').valueOf()\n//          var result = _this.values[n][1][ivalue]\n//          var quality = _this.values[n][1][idelta]\n//         // data.push([time, result])\n//         if (quality < 0.01) {\n// \t          data.push([\n// \t            time, \n// \t            result,\n// \t            result + quality,\n// \t            result - quality,\n// \t            result\n// \t         ])\n// \t         if (quality < 0.01 ) {\n// \t           if (min > result) {\n// \t             min = result\n// \t           }\n// \t           if (max < result) {\n// \t             max = result\n// \t           }\n// \t         }\n//         }\n//          if (date.substring(-2) === '01') {\n// \t         plotlines.push({\n// \t           color: '#ccd6eb',\n// \t           value: time,\n// \t           width: 1,\n// \t           id: n\n// \t         })\n//          }\n//     })\n\n//     console.log(max)\n//     if (data.length === 0) {\n//       return\n//   }\n//     var reg = regression(regData, dates)\n//     // var _this = this\n//    // var chartIndex = Object.keys(this.graphs).findIndex(key => key === type)\n//     quality = Math.round(quality * 100) / 100\n     var color = this.colors[type]\n     var title = this.title[type]\n     var data = this.results[type]\n     var plotlines = this.plotlines\n     var _this = this\n//     var lightColor = this.$shadeColor(color, 0.4)\n    this.graphs[type] = Highcharts.chart('graph_' + type, {\n      chart: {\n        zoomType: 'x'\n      },\n      title: 'Test',\n      width: '680px',\n      height: _this.height + 'px',\n      credits: {\n        enabled:false\n      },\n      legend: {\n        enabled: false\n      },\n      exporting: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        formatter (e) {\n          if (!this.point) {\n            return false\n          }\n          var values = []\n          for (var key in _this.types) {\n            var type = _this.types[key]\n            var chart = _this.graphs[type];\n            if (chart && typeof chart !== 'undefined') {\n               var pt = chart.series[0].points.find(el => el.x === this.point.x )\n               if (pt !== undefined) {\n                 _this.pointDate[type] = pt.open\n                 var quality = Math.round((pt.high - pt.open) * 100) / 100\n                 values.push('<div><span style=\"color:'+ pt.color +';\">&#9632;</span> ' + type.toUpperCase() + ': ' + pt.open + ' &pm; ' + quality + '</div>')\n               }\n               if (key !== type) {\n                 chart.tooltip.hide();\n               }\n            }\n             \n          }\n          _this.pointDate.date = moment.unix(this.point.x/ 1000).format('ll')\n          var s = '<b>' + moment.unix(this.point.x/ 1000).format('ll') + '</b><br />'\n          return s + values.join('<br />')\n        },\n        shared: false\n      },\n      plotOptions: {},\n      xAxis: {\n         type: 'datetime',\n         lineColor:'#666',\n         events: {\n//            setExtremes (e) {\n//              _this.syncExtremes(e, type)\n//            },\n           afterSetExtremes (e) {\n             var xMin = e.min\n             var xMax = e.max\n             for(var key in _this.graphs) {\n               if (key !== type && _this.graphs[key]) {\n                 _this.graphs[key].xAxis[0].setExtremes(xMin, xMax, true, false)\n               }\n             }\n           }\n         },\n         gridLineWidth: 0,\n         plotLines: plotlines,\n       },\n       yAxis: {\n           title: {\n               text: title\n           },\n//            min: min,\n//            max: max,\n           plotLines: [{\n             value: 0,\n             color: 'lightgrey',\n             width: 2\n           }]\n       },\n       series: [{\n           name: type,\n           color: 'darkblue',\n           id: type,\n           type: 'ohlc',\n           zIndex:10,\n           data:data,\n           lineWidth: 1\n       },\n//        {\n//          type: \"linearRegression\",\n//          linkedTo: type,\n//          color: 'darkred',\n//          enableMouseTracking: false,\n//          zIndex: 11,\n//          params: {\n//            period: 30\n//          },\n//          lineWidth: 1\n//        },\n    ]})\n },\n  }\n}\n</script>\n<style>\n.my-spinner {\n  width:100%;\n  padding-top:30px;\n  text-align:center;\n}\n.my-spinner .fa {\n  vertical-align: middle;\n}\n</style>","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spotgins-graph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spotgins-graph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./spotgins-graph.vue?vue&type=template&id=09d74342&\"\nimport script from \"./spotgins-graph.vue?vue&type=script&lang=js&\"\nexport * from \"./spotgins-graph.vue?vue&type=script&lang=js&\"\nimport style0 from \"./spotgins-graph.vue?vue&type=style&index=0&id=09d74342&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}